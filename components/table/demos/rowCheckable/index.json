{
    "setting": {
        "title": "整行选中",
        "order": 4
    },
    "catalogs": [],
    "contents": "<p>当行可选时，默认点击该行的任意区域都可选中或取消选中，但我们可以通过将<code>rowCheckbable</code>设为<code>false</code>来关闭这一特性。</p>\n<blockquote>\n<p>选中的数据默认会在每一行的元素上有<code>k-checked</code>样式名</p>\n</blockquote>\n",
    "codes": [
        {
            "language": "vdt",
            "content": "import Table from 'kpc/components/table';\n\nconst scheme1 = {a: '不整行选中', b: 'B'};\nconst scheme2 = {a: '整行选中', b: 'B'};\nconst data1 = [{a: 'A', b: 'B'}, {a: 'A', b: '点我不会选中整行'}];\nconst data2 = [{a: 'A', b: '任何位置都可以哦～'}, {a: 'A', b: '点我会选中整行'}];\n\n\n<div class='no-data-template'>\n    <Table scheme={{ scheme1 }} data={{ data1 }} rowCheckable={{ false }}/>\n    <Table scheme={{ scheme2 }} data={{ data2 }} />\n</div>"
        },
        {
            "language": "styl",
            "content": ".k-table-wrapper\n    margin-bottom 20px\n    .k-checked\n        background-color #f4f8fb"
        },
        {
            "language": "js",
            "content": "import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"
        }
    ],
    "index": 88,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Table <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n\n<span class=\"hljs-keyword\">const</span> scheme1 = {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'不整行选中'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'B'</span>};\n<span class=\"hljs-keyword\">const</span> scheme2 = {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'整行选中'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'B'</span>};\n<span class=\"hljs-keyword\">const</span> data1 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'A'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'B'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'A'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'点我不会选中整行'</span>}];\n<span class=\"hljs-keyword\">const</span> data2 = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'A'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'任何位置都可以哦～'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'A'</span>, <span class=\"hljs-attr\">b</span>: <span class=\"hljs-string\">'点我会选中整行'</span>}];\n\n\n&lt;div class='no-data-template'&gt;\n    &lt;Table scheme={{ scheme1 }} data={{ data1 }} rowCheckable={{ false }}/&gt;\n    &lt;Table scheme={{ scheme2 }} data={{ data2 }} /&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.k-table-wrapper</span>\n    <span class=\"hljs-attribute\">margin-bottom</span> <span class=\"hljs-number\">20px</span>\n    <span class=\"hljs-selector-class\">.k-checked</span>\n        <span class=\"hljs-attribute\">background-color</span> <span class=\"hljs-number\">#f4f8fb</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"
        }
    ]
}