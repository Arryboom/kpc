{
    "setting": {
        "title": "分组",
        "order": 11
    },
    "catalogs": [],
    "contents": "<p>分组需要两个<code>group</code>来指定：</p>\n<ol>\n<li>第一个是<code>Table</code>上的<code>group</code>属性，该属性指定当前分组的方式，形式为：<code>{[&quot;分组的列的key&quot;]: [&quot;当前列选择的分组的值&quot;]}</code></li>\n<li>第二个是<code>TableColumn</code>或者<code>scheme</code>上的<code>group</code>属性，该属性指定当前列有哪些可选的分组方式，\n如果该列支持多选，还可以添加<code>multiple</code>属性，默认为单选。形式为：<code>[{label: &quot;分组展示文案&quot;, value: &quot;选择后的值&quot;}]</code></li>\n</ol>\n<p>当分组方式改变时，可以监听默认事件<code>$change:group</code>来执行自定义分组逻辑</p>\n<blockquote>\n<p><code>group</code>属性不会双向绑定，所以在改变时，你应该同步更新当前属性值(<code>sort</code>也一样)</p>\n</blockquote>\n",
    "index": 175,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Table, {TableColumn} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n\n<span class=\"hljs-keyword\">const</span> scheme = {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'名称'</span>,\n    <span class=\"hljs-attr\">status</span>: {\n        <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">'状态'</span>,\n        template(data) {\n            <span class=\"hljs-keyword\">return</span> data.status === <span class=\"hljs-string\">'active'</span> ? <span class=\"hljs-string\">'运行中'</span> : <span class=\"hljs-string\">'已关闭'</span>;\n        },\n        <span class=\"hljs-attr\">group</span>: [\n            {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'全部'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">''</span>},\n            {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'运行中'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'active'</span>},\n            {<span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'已关闭'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-string\">'stopped'</span>},\n        ]\n    }\n};\n\n\n&lt;div class='no-data-template'&gt;\n    &lt;Table scheme={{ scheme }} \n        data={{ self.get('data') }} \n        group={{ self.get('group') }}\n        ev-$change:group={{ self._onChangeGroup }}\n    /&gt;\n    &lt;Table data={{ self.get('data') }} \n        group={{ self.get('group') }}\n        ev-$change:group={{ self._onChangeGroup }}\n    &gt;\n        &lt;TableColumn title='名称' key='name' /&gt;\n        &lt;TableColumn title='状态' key='status' \n            template={{ (data) =&gt; data.status === 'active' ? '运行中' : '已关闭' }}\n            group={{ [ \n                {label: '全部', value: ''},\n                {label: '运行中', value: 'active'},\n                {label: '已关闭', value: 'stopped'},\n            ] }}\n        /&gt;\n    &lt;/Table&gt;\n&lt;/div&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.no-data-template</span>\n    <span class=\"hljs-attribute\">display</span>: flex\n    <span class=\"hljs-selector-class\">.k-table-wrapper</span>\n        <span class=\"hljs-attribute\">margin-left</span>: <span class=\"hljs-number\">10px</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">const</span> oData = [\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机1'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'active'</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机2'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'stopped'</span>},\n    {<span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'主机3'</span>, <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'active'</span>},\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n\n    defaults() {\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">data</span>: oData, \n            <span class=\"hljs-attr\">group</span>: {<span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">''</span>}\n        }\n    }\n\n    _onChangeGroup(c, group) {\n        <span class=\"hljs-built_in\">console</span>.log(group);\n        <span class=\"hljs-keyword\">const</span> data = oData.filter(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> {\n            <span class=\"hljs-keyword\">let</span> matched = <span class=\"hljs-literal\">true</span>;\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> key <span class=\"hljs-keyword\">in</span> group) {\n                <span class=\"hljs-keyword\">const</span> value = group[key];\n                <span class=\"hljs-keyword\">if</span> (value &amp;&amp; item[key] !== value) {\n                    matched = <span class=\"hljs-literal\">false</span>;\n                    <span class=\"hljs-keyword\">break</span>;\n                }\n            }\n            <span class=\"hljs-keyword\">return</span> matched;\n        });\n\n        <span class=\"hljs-keyword\">this</span>.set({data, group});\n    }\n}</code></pre>"
        }
    ]
}