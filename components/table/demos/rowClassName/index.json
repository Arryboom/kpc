{
    "setting": {
        "title": "行样式",
        "order": 5
    },
    "catalogs": [],
    "contents": "<p><code>rowClassName</code>：给行添加样式，类型<code>Function</code>，默认：<code>function(value, index) {  }</code>，该函数返回的字符串将被当做<code>className</code>添加到该行上</p>\n",
    "codes": [
        {
            "language": "vdt",
            "content": "import Table from 'kpc/components/table';\n\nconst scheme = {a: '偶数行背景变换'};\nconst data = [{a: '1'}, {a: '2'}, {a: '3'}, {a: '4'}, {a: '5'}]\n\n\n<Table scheme={{ scheme }} data={{ data }} \n    rowClassName={{ (value, index) => index % 2 === 0 ? 'even' : 'odd' }}\n/>"
        },
        {
            "language": "styl",
            "content": ".even\n    background #efefef"
        },
        {
            "language": "js",
            "content": "import Intact from 'intact';\nimport template from './index.vdt';\nimport './index.styl'; \n\nexport default class extends Intact {\n    @Intact.template()\n    static template = template;\n}"
        }
    ],
    "index": 99,
    "highlighted": [
        {
            "language": "vdt",
            "content": "<pre><code class=\"hljs jsx\"><span class=\"hljs-keyword\">import</span> Table <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'kpc/components/table'</span>;\n\n<span class=\"hljs-keyword\">const</span> scheme = {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'偶数行背景变换'</span>};\n<span class=\"hljs-keyword\">const</span> data = [{<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'1'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'2'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'3'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'4'</span>}, {<span class=\"hljs-attr\">a</span>: <span class=\"hljs-string\">'5'</span>}]\n\n\n&lt;Table scheme={{ scheme }} data={{ data }} \n    rowClassName={{ (value, index) =&gt; index % <span class=\"hljs-number\">2</span> === <span class=\"hljs-number\">0</span> ? <span class=\"hljs-string\">'even'</span> : <span class=\"hljs-string\">'odd'</span> }}\n/&gt;</code></pre>"
        },
        {
            "language": "styl",
            "content": "<pre><code class=\"hljs styl\"><span class=\"hljs-selector-class\">.even</span>\n    <span class=\"hljs-attribute\">background</span> <span class=\"hljs-number\">#efefef</span></code></pre>"
        },
        {
            "language": "js",
            "content": "<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">import</span> Intact <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'intact'</span>;\n<span class=\"hljs-keyword\">import</span> template <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./index.vdt'</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">'./index.styl'</span>; \n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Intact</span> </span>{\n    @Intact.template()\n    <span class=\"hljs-keyword\">static</span> template = template;\n}</code></pre>"
        }
    ]
}