var Checkbox = require('node_modules/kpc/src/components/checkbox'),
    Radio = require('node_modules/kpc/src/components/radio');

<table class={{ "c-table " + (self.get('className') || "") }} >
    <thead>
        <tr>
            {{ self.get('isShowCheckbox') && self.get('checkType') !== 'radio' ? 
                <th width="40">
                     <Checkbox class="c-m-l-20" ev-changed={{ _.bind(self._clickCheckAll, self) }} checked={{ self.isCheckedAll() }}/>
                </th> :
                (self.get('checkType') === 'radio' ? <th width="40"></th> : undefined)
            }}
            {{ _.map(self.get('scheme'), function(item) {
                   if (_.isObject(item)){
                       return <th width={{ item.width ? item.width : undefined }}>{{ item.title }}{{self.get('resizable') ? <span class='th-resizable'>|</span> : undefined }}</th>
                   } else {
                       return <th>{{ item }}{{self.get('resizable') ? <span class='th-resizable'>|</span> : undefined }}</th>
                   }
            }) }}
        </tr>
    </thead>
    <tbody class={{ self.get('isRowCheck') ? 'row-checkable' : '' }}>
        {{ !_.isEmpty(self.get('data')) ? 
            _.map(self.get('data'), function(value, index) {
                return <tr class={{ index % 2 ? "even" : "odd" }} ev-click={{ self.get('isRowCheck') ? _.bind(self._clickCheckSingle, self, index) : undefined }}>
                    {{ self.get('isShowCheckbox') && self.get('checkType') !== 'radio' ? 
                        <td><Checkbox class="c-m-l-20" ev-changed={{ _.bind(self._clickCheckSingle, self, index) }} checked={{ self.get('checkedIndex')[index] }} /></td> :
                        (self.get('checkType') === 'radio' ? <td><Radio class="c-m-l-15" ev-click={{ _.bind(self._clickCheckSingle, self, index) }} checked={{ self.get('checkedIndex')[index] }} /></td> : undefined)
                    }}
                    {{ _.map(self.get('scheme'), function(item, key) {
                        var td;
                        if (_.isObject(item)) {
                            if (_.isFunction(item.template)) {
                                td = item.template.call(self, value, index);
                            } else {
                                td = item.template;
                            }
                        } else if (value[key] !== undefined) {
                            td = value[key];
                        } else {
                            var object = item,
                                keys = key.split('.'),
                                i = 0;
                            while (object != null && i < keys.length) {
                                object = object[keys[i++]];
                            }
                            td = (i && i === keys.length) ? object : null;
                        }
                        // if (_.isString(td) || _.isNumber(td)) {
                            // return <td innerHTML={{ td }}></td>
                        // } else {
                            return <td title={{ _.isString(td) || _.isNumber(td) ? td : undefined }}>{{ td }}</td>
                        // }
                    }) }}
                </tr>
            }) :
            <tr class="odd">
                <td colSpan={{ _.size(self.get('scheme')) + (self.get('isShowCheckbox') ? 1 : 0) }} class="c-center">/(ㄒoㄒ)/~~ 没有找到亲要的数据哦~</td>
            </tr>
        }}
    </tbody>
</table>
